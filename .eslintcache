[{"C:\\Projects\\prop-investor\\src\\index.tsx":"1","C:\\Projects\\prop-investor\\src\\serviceWorker.ts":"2","C:\\Projects\\prop-investor\\src\\root\\store.ts":"3","C:\\Projects\\prop-investor\\src\\root\\App.tsx":"4","C:\\Projects\\prop-investor\\src\\api\\setupAxios.js":"5","C:\\Projects\\prop-investor\\src\\root\\rootSagas.tsx":"6","C:\\Projects\\prop-investor\\src\\root\\rootReducer.tsx":"7","C:\\Projects\\prop-investor\\src\\modules\\home\\index.js":"8","C:\\Projects\\prop-investor\\src\\modules\\myProfile\\index.js":"9","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\index.js":"10","C:\\Projects\\prop-investor\\src\\modules\\home\\sagas.ts":"11","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\sagas.ts":"12","C:\\Projects\\prop-investor\\src\\modules\\properties\\index.js":"13","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\index.js":"14","C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\index.js":"15","C:\\Projects\\prop-investor\\src\\modules\\properties\\sagas.ts":"16","C:\\Projects\\prop-investor\\src\\modules\\properties\\reducer.ts":"17","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\sagas.ts":"18","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\reducer.ts":"19","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\reducer.ts":"20","C:\\Projects\\prop-investor\\src\\modules\\home\\reducer.ts":"21","C:\\Projects\\prop-investor\\src\\models\\authorization\\sagas.ts":"22","C:\\Projects\\prop-investor\\src\\models\\authorization\\reducer.ts":"23","C:\\Projects\\prop-investor\\src\\modules\\properties\\constants.js":"24","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\constants.js":"25","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\actionTypes.ts":"26","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\actions.ts":"27","C:\\Projects\\prop-investor\\src\\modules\\properties\\actions.ts":"28","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\actionTypes.ts":"29","C:\\Projects\\prop-investor\\src\\modules\\home\\actionTypes.ts":"30","C:\\Projects\\prop-investor\\src\\models\\authorization\\constants.js":"31","C:\\Projects\\prop-investor\\src\\modules\\properties\\actionTypes.ts":"32","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\constants.js":"33","C:\\Projects\\prop-investor\\src\\modules\\properties\\container.tsx":"34","C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\container.tsx":"35","C:\\Projects\\prop-investor\\src\\models\\authorization\\actionTypes.ts":"36","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\container.tsx":"37","C:\\Projects\\prop-investor\\src\\models\\authorization\\actions.ts":"38","C:\\Projects\\prop-investor\\src\\api\\restService.js":"39","C:\\Projects\\prop-investor\\src\\utils\\asyncActions.js":"40","C:\\Projects\\prop-investor\\src\\modules\\home\\constants.js":"41","C:\\Projects\\prop-investor\\src\\utils\\helpers.js":"42","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\actions.ts":"43","C:\\Projects\\prop-investor\\src\\modules\\home\\actions.ts":"44","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\selectors.js":"45","C:\\Projects\\prop-investor\\src\\root\\moduleNames.tsx":"46","C:\\Projects\\prop-investor\\src\\modules\\home\\container.tsx":"47","C:\\Projects\\prop-investor\\src\\modules\\myProfile\\container.tsx":"48","C:\\Projects\\prop-investor\\src\\modules\\properties\\selectors.js":"49","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\container.tsx":"50","C:\\Projects\\prop-investor\\src\\root\\modelNames.tsx":"51","C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\navigationPanel.tsx":"52","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\myInvestments.tsx":"53","C:\\Projects\\prop-investor\\src\\modules\\properties\\properties.tsx":"54","C:\\Projects\\prop-investor\\src\\modules\\home\\selectors.js":"55","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\selectors.js":"56","C:\\Projects\\prop-investor\\src\\models\\authorization\\selectors.js":"57","C:\\Projects\\prop-investor\\src\\modules\\home\\home.tsx":"58","C:\\Projects\\prop-investor\\src\\modules\\myProfile\\myProfile.tsx":"59","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\propertyDetails.tsx":"60","C:\\Projects\\prop-investor\\src\\components\\sidebar\\sidebar.tsx":"61","C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\loginSignupForm.tsx":"62","C:\\Projects\\prop-investor\\src\\components\\propertyTile\\propertyTile.tsx":"63","C:\\Projects\\prop-investor\\src\\components\\registerNewProperty\\registerNewProperty.tsx":"64","C:\\Projects\\prop-investor\\src\\utils\\constants\\states.js":"65","C:\\Projects\\prop-investor\\src\\utils\\formValidity\\validation.js":"66","C:\\Projects\\prop-investor\\src\\utils\\formValidity\\constants.js":"67","C:\\Projects\\prop-investor\\src\\utils\\constants\\countries.js":"68","C:\\Projects\\prop-investor\\src\\components\\formGenerator\\formFeedback.tsx":"69","C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\signUpForm.tsx":"70","C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\loginForm.tsx":"71","C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\constants.js":"72"},{"size":530,"mtime":1622281690000,"results":"73","hashOfConfig":"74"},{"size":5278,"mtime":1622281690000,"results":"75","hashOfConfig":"74"},{"size":526,"mtime":1622281690000,"results":"76","hashOfConfig":"74"},{"size":1176,"mtime":1624101390000,"results":"77","hashOfConfig":"74"},{"size":658,"mtime":1626614989012,"results":"78","hashOfConfig":"74"},{"size":522,"mtime":1624102172000,"results":"79","hashOfConfig":"74"},{"size":495,"mtime":1624098320000,"results":"80","hashOfConfig":"74"},{"size":54,"mtime":1622281690000,"results":"81","hashOfConfig":"74"},{"size":64,"mtime":1622281690000,"results":"82","hashOfConfig":"74"},{"size":76,"mtime":1622281690000,"results":"83","hashOfConfig":"74"},{"size":694,"mtime":1622281690000,"results":"84","hashOfConfig":"74"},{"size":687,"mtime":1624099724000,"results":"85","hashOfConfig":"74"},{"size":66,"mtime":1622281690000,"results":"86","hashOfConfig":"74"},{"size":72,"mtime":1624098618000,"results":"87","hashOfConfig":"74"},{"size":76,"mtime":1622281690000,"results":"88","hashOfConfig":"74"},{"size":1209,"mtime":1622295540000,"results":"89","hashOfConfig":"74"},{"size":2160,"mtime":1624712757622,"results":"90","hashOfConfig":"74"},{"size":771,"mtime":1624715307681,"results":"91","hashOfConfig":"74"},{"size":1298,"mtime":1624099844000,"results":"92","hashOfConfig":"74"},{"size":1568,"mtime":1624715304647,"results":"93","hashOfConfig":"74"},{"size":1279,"mtime":1624715314100,"results":"94","hashOfConfig":"74"},{"size":2551,"mtime":1626613362479,"results":"95","hashOfConfig":"74"},{"size":4818,"mtime":1626615616807,"results":"96","hashOfConfig":"74"},{"size":183,"mtime":1626018508976,"results":"97","hashOfConfig":"74"},{"size":111,"mtime":1622281690000,"results":"98","hashOfConfig":"74"},{"size":372,"mtime":1624098488000,"results":"99","hashOfConfig":"74"},{"size":667,"mtime":1622281690000,"results":"100","hashOfConfig":"74"},{"size":1009,"mtime":1622283666000,"results":"101","hashOfConfig":"74"},{"size":476,"mtime":1622281690000,"results":"102","hashOfConfig":"74"},{"size":330,"mtime":1622281690000,"results":"103","hashOfConfig":"74"},{"size":309,"mtime":1622976722000,"results":"104","hashOfConfig":"74"},{"size":673,"mtime":1622283496000,"results":"105","hashOfConfig":"74"},{"size":102,"mtime":1624102256000,"results":"106","hashOfConfig":"74"},{"size":603,"mtime":1622285244000,"results":"107","hashOfConfig":"74"},{"size":738,"mtime":1622281690000,"results":"108","hashOfConfig":"74"},{"size":1276,"mtime":1622976590000,"results":"109","hashOfConfig":"74"},{"size":460,"mtime":1624099890000,"results":"110","hashOfConfig":"74"},{"size":2045,"mtime":1622978492000,"results":"111","hashOfConfig":"74"},{"size":1677,"mtime":1626018508914,"results":"112","hashOfConfig":"74"},{"size":182,"mtime":1624098718000,"results":"113","hashOfConfig":"74"},{"size":99,"mtime":1622281690000,"results":"114","hashOfConfig":"74"},{"size":503,"mtime":1624100978000,"results":"115","hashOfConfig":"74"},{"size":521,"mtime":1624098540000,"results":"116","hashOfConfig":"74"},{"size":526,"mtime":1622281690000,"results":"117","hashOfConfig":"74"},{"size":368,"mtime":1624099874000,"results":"118","hashOfConfig":"74"},{"size":250,"mtime":1624098198000,"results":"119","hashOfConfig":"74"},{"size":443,"mtime":1622281690000,"results":"120","hashOfConfig":"74"},{"size":553,"mtime":1622978424000,"results":"121","hashOfConfig":"74"},{"size":487,"mtime":1622285162000,"results":"122","hashOfConfig":"74"},{"size":532,"mtime":1622281690000,"results":"123","hashOfConfig":"74"},{"size":56,"mtime":1622977266000,"results":"124","hashOfConfig":"74"},{"size":3856,"mtime":1626615546802,"results":"125","hashOfConfig":"74"},{"size":1698,"mtime":1624102596000,"results":"126","hashOfConfig":"74"},{"size":1967,"mtime":1622986568000,"results":"127","hashOfConfig":"74"},{"size":358,"mtime":1622281690000,"results":"128","hashOfConfig":"74"},{"size":374,"mtime":1622281690000,"results":"129","hashOfConfig":"74"},{"size":783,"mtime":1622978138000,"results":"130","hashOfConfig":"74"},{"size":1925,"mtime":1622985196000,"results":"131","hashOfConfig":"74"},{"size":19856,"mtime":1626615647069,"results":"132","hashOfConfig":"74"},{"size":5420,"mtime":1624104096000,"results":"133","hashOfConfig":"74"},{"size":1139,"mtime":1622281690000,"results":"134","hashOfConfig":"74"},{"size":1291,"mtime":1622281690000,"results":"135","hashOfConfig":"74"},{"size":1047,"mtime":1624712926879,"results":"136","hashOfConfig":"74"},{"size":16886,"mtime":1626018508945,"results":"137","hashOfConfig":"74"},{"size":442515,"mtime":1623998412000,"results":"138","hashOfConfig":"74"},{"size":1949,"mtime":1622984936000,"results":"139","hashOfConfig":"74"},{"size":2588,"mtime":1624103350000,"results":"140","hashOfConfig":"74"},{"size":12603,"mtime":1622281690000,"results":"141","hashOfConfig":"74"},{"size":500,"mtime":1622281690000,"results":"142","hashOfConfig":"74"},{"size":12918,"mtime":1624814555568,"results":"143","hashOfConfig":"74"},{"size":5355,"mtime":1622281690000,"results":"144","hashOfConfig":"74"},{"size":33130,"mtime":1622281690000,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"1lzs3du",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"148"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"163"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"C:\\Projects\\prop-investor\\src\\index.tsx",[],["306","307"],"C:\\Projects\\prop-investor\\src\\serviceWorker.ts",[],"C:\\Projects\\prop-investor\\src\\root\\store.ts",[],"C:\\Projects\\prop-investor\\src\\root\\App.tsx",[],"C:\\Projects\\prop-investor\\src\\api\\setupAxios.js",[],"C:\\Projects\\prop-investor\\src\\root\\rootSagas.tsx",[],"C:\\Projects\\prop-investor\\src\\root\\rootReducer.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\index.js",[],["308","309"],"C:\\Projects\\prop-investor\\src\\modules\\myProfile\\index.js",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\index.js",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\sagas.ts",["310"],"import { takeLatest, put } from \"redux-saga/effects\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport { getRequest } from \"api/restService\";\nimport * as constants from \"./constants\";\n\nexport function* fetchPopularHouses() {\n  yield put(actions.fetchPopularHousesPending());\n  try {\n    const response = yield getRequest({\n      url: constants.POPULAR_HOUSES_URL.endpoint,\n    });\n    yield put(actions.fetchPopularHousesSuccess(response.data));\n  } catch (e) {\n    yield put(actions.fetchPopularHousesFailure(e));\n  }\n}\n\nexport const onGetDetails = takeLatest(\n  actionTypes.GET_POPULAR_HOUSES,\n  fetchPopularHouses\n);\n\nexport default [onGetDetails];\n","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\sagas.ts",["311"],"import { takeLatest, put } from \"redux-saga/effects\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport { getRequest } from \"api/restService\";\nimport * as constants from \"./constants\";\n\nexport function* fetchMyInvestments() {\n  yield put(actions.fetchMyInvestmentsPending());\n  try {\n    const response = yield getRequest({\n      url: constants.MY_INVESTMENT_URL.endpoint\n    });\n    yield put(actions.fetchMyInvestmentsSuccess(response));\n  } catch (e) {\n    yield put(actions.fetchMyInvestmentsFailure(e));\n  }\n}\n\nexport const onGetDetails = takeLatest(\n  actionTypes.GET_MY_INVESTMENTS,\n  fetchMyInvestments\n);\n\nexport default [onGetDetails];\n","C:\\Projects\\prop-investor\\src\\modules\\properties\\index.js",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\index.js",[],"C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\index.js",[],"C:\\Projects\\prop-investor\\src\\modules\\properties\\sagas.ts",["312"],"import { takeLatest, put } from \"redux-saga/effects\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport { getRequest, postRequest } from \"api/restService\";\nimport * as constants from \"./constants\";\n\nexport function* fetchAllProperties() {\n  yield put(actions.fetchAllPropertiesPending());\n  try {\n    const response = yield getRequest({\n      url: constants.ALL_PROPERTIES_URL.endpoint,\n    });\n    yield put(actions.fetchAllPropertiesSuccess(response.data));\n  } catch (e) {\n    yield put(actions.fetchAllPropertiesFailure(e));\n  }\n}\n\nexport function* initiateRegisterProperty(action) {\n  yield put(actions.registerPropertyPending());\n  try {\n    const response = yield postRequest({\n      url: constants.REGISTER_PROPERTY_URL.endpoint,\n      body: action.data,\n    });\n    yield put(actions.registerPropertySuccess(response.data));\n  } catch (e) {\n    yield put(actions.registerPropertyFailure(e));\n  }\n}\n\nexport const onGetDetails = takeLatest(\n  actionTypes.GET_ALL_PROPERTIES,\n  fetchAllProperties\n);\n\nexport const onRegisterProperty = takeLatest(\n  actionTypes.REGISTER_PROPERTY,\n  initiateRegisterProperty\n);\n\nexport default [onGetDetails, onRegisterProperty];\n","C:\\Projects\\prop-investor\\src\\modules\\properties\\reducer.ts",["313"],"import * as actionTypes from \"./actionTypes\";\nimport _ from \"lodash\";\nimport * as moduleNames from \"root/moduleNames\";\nimport * as asyncActions from \"utils/asyncActions\";\n\nexport const initialState = {\n  allProperties: { status: asyncActions.NONE, data: [] },\n  registerProperty: { status: asyncActions.NONE },\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ALL_PROPERTIES_SUCCESS:\n      return handleGetAllPropertiesSuccess(state, action);\n\n    case actionTypes.GET_ALL_PROPERTIES_FAILURE:\n      return handleGetAllPropertiesFailure(state, action);\n\n    case actionTypes.GET_ALL_PROPERTIES_PENDING:\n      return handleGetAllPropertiesPending(state);\n\n    case actionTypes.REGISTER_PROPERTY_SUCCESS:\n      return handleRegisterPropertySuccess(state, action);\n\n    case actionTypes.REGISTER_PROPERTY_FAILURE:\n      return handleRegisterPropertyFailure(state, action);\n\n    case actionTypes.REGISTER_PROPERTY_PENDING:\n      return handleRegisterPropertyPending(state);\n\n    default:\n      return state;\n  }\n};\n\nfunction handleGetAllPropertiesSuccess(state, action) {\n  return _.defaults(\n    {\n      allProperties: {\n        status: asyncActions.SUCCESS,\n        data: action.response,\n      },\n    },\n    state\n  );\n}\n\nfunction handleGetAllPropertiesFailure(state, action) {\n  return _.defaults(\n    { allProperties: { status: asyncActions.FAILURE, data: action.data } },\n    state\n  );\n}\n\nfunction handleGetAllPropertiesPending(state) {\n  return _.defaults({ allProperties: { status: asyncActions.PENDING } }, state);\n}\n\nfunction handleRegisterPropertySuccess(state, action) {\n  return _.defaults(\n    {\n      registerProperty: { status: asyncActions.SUCCESS },\n    },\n    state\n  );\n}\n\nfunction handleRegisterPropertyFailure(state, action) {\n  return _.defaults(\n    {\n      registerProperty: { status: asyncActions.FAILURE, message: action.data },\n    },\n    state\n  );\n}\n\nfunction handleRegisterPropertyPending(state) {\n  return _.defaults(\n    {\n      registerProperty: { status: asyncActions.PENDING },\n    },\n    state\n  );\n}\n\nexport default { [moduleNames.PROPERTIES_MODULE]: reducer };\n","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\sagas.ts",["314"],"import { takeLatest, put } from \"redux-saga/effects\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport { getRequest } from \"api/restService\";\nimport * as constants from \"./constants\";\n\nexport function* fetchPropertyDetails(data) {\n  yield put(actions.fetchPropertyDetailsPending());\n  try {\n    const response = yield getRequest({\n      url: constants.PROPERTY_DETAILS_URL.endpoint,\n      interpolateParams: { propertyId: data.propertyId },\n    });\n    yield put(actions.fetchPropertyDetailsSuccess(response?.data));\n  } catch (e) {\n    yield put(actions.fetchPropertyDetailsFailure(e));\n  }\n}\n\nexport const onGetDetails = takeLatest(\n  actionTypes.GET_PROPERTY_DETAILS,\n  fetchPropertyDetails\n);\n\nexport default [onGetDetails];\n","C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\reducer.ts",["315"],"import * as actionTypes from \"./actionTypes\";\nimport _ from \"lodash\";\nimport * as moduleNames from \"root/moduleNames\";\nimport * as asyncActions from \"utils/asyncActions\";\n\nexport const initialState = {\n  myInvestments: { status: asyncActions.NONE, data: {} },\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_MY_INVESTMENTS_SUCCESS:\n      return handleGetMyInvestmentsSuccess(state, action);\n\n    case actionTypes.GET_MY_INVESTMENTS_FAILURE:\n      return handleGetMyInvestmentsFailure(state, action);\n\n    case actionTypes.GET_MY_INVESTMENTS_PENDING:\n      return handleGetMyInvestmentsPending(state);\n\n    default:\n      return state;\n  }\n};\n\nfunction handleGetMyInvestmentsSuccess(state, action) {\n  return _.defaults(\n    {\n      myInvestments: {\n        status: asyncActions.SUCCESS,\n        data: action.data.data,\n      },\n    },\n    state\n  );\n}\n\nfunction handleGetMyInvestmentsFailure(state, action) {\n  return _.defaults(\n    { myInvestments: { status: asyncActions.FAILURE, data: action.data } },\n    state\n  );\n}\n\nfunction handleGetMyInvestmentsPending(state) {\n  return _.defaults(\n    { myInvestments: { status: asyncActions.PENDING } },\n    state\n  );\n}\n\nexport default { [moduleNames.MY_INVESTMENTS_MODULE]: reducer };\n","C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\reducer.ts",["316"],"import * as actionTypes from \"./actionTypes\";\nimport _ from \"lodash\";\nimport * as moduleNames from \"root/moduleNames\";\nimport * as asyncActions from \"utils/asyncActions\";\n\nexport const initialState = {\n  propertyDetails: { status: asyncActions.NONE, data: {} },\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PROPERTY_DETAILS_SUCCESS:\n      return handleGetPropertyDetailsSuccess(state, action);\n\n    case actionTypes.GET_PROPERTY_DETAILS_FAILURE:\n      return handleGetPropertyDetailsFailure(state, action);\n\n    case actionTypes.GET_PROPERTY_DETAILS_PENDING:\n      return handleGetPropertyDetailsPending(state);\n\n    case actionTypes.RESET_PROPERTY_DETAILS:\n      return handleResetPropertyDetails(state);\n\n    default:\n      return state;\n  }\n};\n\nfunction handleGetPropertyDetailsSuccess(state, action) {\n  return _.defaults(\n    {\n      propertyDetails: {\n        status: asyncActions.SUCCESS,\n        data: action.data[0],\n      },\n    },\n    state\n  );\n}\n\nfunction handleGetPropertyDetailsFailure(state, action) {\n  return _.defaults(\n    { propertyDetails: { status: asyncActions.FAILURE, data: action.data } },\n    state\n  );\n}\n\nfunction handleGetPropertyDetailsPending(state) {\n  return _.defaults(\n    { propertyDetails: { status: asyncActions.PENDING } },\n    state\n  );\n}\n\nfunction handleResetPropertyDetails(state) {\n  return _.defaults(\n    { propertyDetails: { status: asyncActions.NONE, data: {} } },\n    state\n  );\n}\n\nexport default { [moduleNames.PROPERTY_DETAILS_MODULE]: reducer };\n","C:\\Projects\\prop-investor\\src\\modules\\home\\reducer.ts",["317"],"import * as actionTypes from \"./actionTypes\";\nimport _ from \"lodash\";\nimport * as moduleNames from \"root/moduleNames\";\nimport * as asyncActions from \"utils/asyncActions\";\n\nexport const initialState = {\n  popularHouses: { status: asyncActions.NONE, data: [] },\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_POPULAR_HOUSES_SUCCESS:\n      return handleGetPopularHousesSuccess(state, action);\n\n    case actionTypes.GET_POPULAR_HOUSES_FAILURE:\n      return handleGetPopularHousesFailure(state, action);\n\n    case actionTypes.GET_POPULAR_HOUSES_PENDING:\n      return handleGetPopularHousesPending(state);\n\n    default:\n      return state;\n  }\n};\n\nfunction handleGetPopularHousesSuccess(state, action) {\n  return _.defaults(\n    {\n      popularHouses: {\n        status: asyncActions.SUCCESS,\n        data: action.response,\n      },\n    },\n    state\n  );\n}\n\nfunction handleGetPopularHousesFailure(state, action) {\n  return _.defaults(\n    { popularHouses: { status: asyncActions.FAILURE, data: action.response } },\n    state\n  );\n}\n\nfunction handleGetPopularHousesPending(state) {\n  return _.defaults({ popularHouses: { status: asyncActions.PENDING } }, state);\n}\n\nexport default { [moduleNames.HOME_MODULE]: reducer };\n","C:\\Projects\\prop-investor\\src\\models\\authorization\\sagas.ts",["318"],"C:\\Projects\\prop-investor\\src\\models\\authorization\\reducer.ts",["319"],"C:\\Projects\\prop-investor\\src\\modules\\properties\\constants.js",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\constants.js",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\actionTypes.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\actions.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\properties\\actions.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\actionTypes.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\actionTypes.ts",[],"C:\\Projects\\prop-investor\\src\\models\\authorization\\constants.js",[],"C:\\Projects\\prop-investor\\src\\modules\\properties\\actionTypes.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\constants.js",[],"C:\\Projects\\prop-investor\\src\\modules\\properties\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\models\\authorization\\actionTypes.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\models\\authorization\\actions.ts",[],"C:\\Projects\\prop-investor\\src\\api\\restService.js",[],"C:\\Projects\\prop-investor\\src\\utils\\asyncActions.js",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\constants.js",[],"C:\\Projects\\prop-investor\\src\\utils\\helpers.js",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\actions.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\actions.ts",[],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\selectors.js",[],"C:\\Projects\\prop-investor\\src\\root\\moduleNames.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\myProfile\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\properties\\selectors.js",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\container.tsx",[],"C:\\Projects\\prop-investor\\src\\root\\modelNames.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\navigationPanel\\navigationPanel.tsx",["320"],"C:\\Projects\\prop-investor\\src\\modules\\myInvestments\\myInvestments.tsx",["321","322"],"import React from \"react\";\nimport _ from \"lodash\";\nimport Image from \"react-bootstrap/Image\";\nimport { Row, Col, Table } from \"react-bootstrap\";\n\nclass PropertyDetails extends React.PureComponent<{\n  myInvestments: any;\n  onGetMyInvestments: () => void;\n}> {\n  componentDidMount() {\n    this.props.onGetMyInvestments();\n  }\n\n  render() {\n    const {\n      myInvestments: { status, data },\n    } = this.props;\n    const isDataEmpty = _.isEmpty(data);\n    return (\n      <>\n        <h2 className=\"pb-4\">My Investments</h2>\n        <Row className=\"pb-5\">\n          <Col xs={12} md={12} className=\"mr-auto\">\n            <div>\n              {!isDataEmpty && (\n                <>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>PropertyId</th>\n                        <th>Property Name</th>\n                        <th>Property Address</th>\n                        <th>Amount(USD)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {_.map(data, (investment) => {\n                        return (\n                          <tr>\n                            <td>{investment.propertyId}</td>\n                            <td>{investment.propertyName}</td>\n                            <td>{investment.propertyAddress}</td>\n                            <td>{investment.amount}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PropertyDetails;\n","C:\\Projects\\prop-investor\\src\\modules\\properties\\properties.tsx",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\selectors.js",[],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\selectors.js",[],"C:\\Projects\\prop-investor\\src\\models\\authorization\\selectors.js",[],"C:\\Projects\\prop-investor\\src\\modules\\home\\home.tsx",["323"],"import React from \"react\";\nimport _ from \"lodash\";\nimport Image from \"react-bootstrap/Image\";\nimport PropertyTile from \"components/propertyTile/propertyTile\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport \"./home.css\";\nclass HomeModule extends React.PureComponent<\n  { popularHouses: any; onGetPopularHouses: () => void },\n  { houses: any }\n> {\n  state = {\n    houses: [],\n  };\n\n  componentDidMount() {\n    this.props.onGetPopularHouses();\n  }\n\n  handleGetAllProperties = () => {\n    const {\n      popularHouses: { status, data },\n    } = this.props;\n    const topHouses = _.slice(data, 0, 4);\n    const properties = _.map(topHouses, (property, index) => {\n      return <PropertyTile config={property} key={`property-${index}`} />;\n    });\n    return properties;\n  };\n\n  render() {\n    const allProperties = this.handleGetAllProperties();\n    return (\n      <>\n        <Row className=\"pt-5 pb-5\" id=\"properties\">\n          <Col\n            xs={12}\n            lg={{ span: 5, offset: 1 }}\n            className=\"text-lg-left text-md-center p-4\"\n          >\n            <h1 className=\"pb-4\">\n              Real Estate Investment Made Easy And Accessible To Everyone\n            </h1>\n            <div className=\"text-lg-justify\" style={{ fontSize: \"22px\" }}>\n              For the first time, investors around the globe can buy into the US\n              real estate market through fully-compliant, fractional, tokenized\n              ownership. Powered by blockchain.\n            </div>\n            <Button size=\"lg\" variant=\"outline-primary\" className=\"mt-5\">\n              Know More\n            </Button>\n          </Col>\n          <Col xs={12} lg={5}>\n            <Image src=\"images/banner.png\" fluid />\n          </Col>\n        </Row>\n\n        <h2 className=\"mb-3\">Popular Properties</h2>\n        <Row className=\"justify-content-center\">{allProperties}</Row>\n      </>\n    );\n  }\n}\n\nexport default HomeModule;\n","C:\\Projects\\prop-investor\\src\\modules\\myProfile\\myProfile.tsx",["324"],"C:\\Projects\\prop-investor\\src\\modules\\propertyDetails\\propertyDetails.tsx",["325","326","327","328"],"import React from \"react\";\nimport _ from \"lodash\";\nimport Image from \"react-bootstrap/Image\";\nimport { Row, Col, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\n\nclass PropertyDetails extends React.PureComponent<\n  {\n    propertyDetails: any;\n    onGetPropertyDetails: (propertyId) => void;\n    onResetPropertyDetails: () => void;\n    match: any;\n  },\n  { houses: any; activeHouseImg: any }\n> {\n  state = {\n    houses: [],\n    activeHouseImg: null,\n  };\n\n  componentDidMount() {\n    const {\n      match: { params },\n    } = this.props;\n    this.props.onGetPropertyDetails(params.propertyId);\n  }\n\n  componentWillUnmount() {\n    this.props.onResetPropertyDetails();\n  }\n\n  handleActiveImgChange = (src) => {\n    this.setState({ activeHouseImg: src });\n  };\n\n  render() {\n    const {\n      propertyDetails: { status, data },\n    } = this.props;\n    const { activeHouseImg } = this.state;\n    const imgSrc = data && data.images && data.images[0];\n    const activeSrc = activeHouseImg || imgSrc;\n    const isDataEmpty = _.isEmpty(data);\n    return (\n      <>\n        <h2 className=\"pb-4\">Property Details</h2>\n        <Row className=\"pb-5\">\n          {!isDataEmpty && (\n            <Col\n              xs={12}\n              // lg={{ span: 5, offset: 1 }}\n              md={6}\n              className=\"text-lg-left text-md-center\"\n            >\n              {_.map(data.images, (image, index) => {\n                if (index == \"0\") {\n                  return (\n                    <Image\n                      src={activeSrc}\n                      fluid\n                      className=\"d-block\"\n                      key={image}\n                    />\n                  );\n                } else {\n                  let classNames = [\"pt-3\"];\n                  if (index != \"1\") {\n                    classNames.push(\"pl-3\");\n                  }\n                  const cNames = classNames.join(\" \");\n                  return (\n                    <Image\n                      src={image}\n                      fluid\n                      width=\"150\"\n                      height=\"150\"\n                      className={cNames}\n                      key={image}\n                      onClick={() => this.handleActiveImgChange(image)}\n                    />\n                  );\n                }\n              })}\n              <h4 className=\"pt-3\">Map Location</h4>\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d1582.8162758923565!2d-121.9485773!3d37.4929966!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x808fc654f67bbf49%3A0x2d4f6c443c47fb25!2sTesla!5e0!3m2!1sen!2suk!4v1622986935125!5m2!1sen!2suk\"\n                width=\"600\"\n                height=\"250\"\n              ></iframe>\n            </Col>\n          )}\n          <Col xs={12} md={6}>\n            <div>\n              {!isDataEmpty && (\n                <>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th colSpan={2}>Location Highlights</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Name</td>\n                        <td>{data.name}</td>\n                      </tr>\n                      <tr>\n                        <td>About</td>\n                        <td>{data.about}</td>\n                      </tr>\n                      <tr>\n                        <td>Address Line 1</td>\n                        <td>{data.address_1}</td>\n                      </tr>\n                      <tr>\n                        <td>Address Line 2</td>\n                        <td>{data.address_2}</td>\n                      </tr>\n                      <tr>\n                        <td>City</td>\n                        <td>{data.city}</td>\n                      </tr>\n                      <tr>\n                        <td>State</td>\n                        <td>{data.state}</td>\n                      </tr>\n                      <tr>\n                        <td>Country</td>\n                        <td>{data.country}</td>\n                      </tr>\n                      <tr>\n                        <td>Zip</td>\n                        <td>{data.zip}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th colSpan={2}>Property Insights</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Value(USD)</td>\n                        <td>{data.value}</td>\n                      </tr>\n                      <tr>\n                        <td>Number Of Bathrooms</td>\n                        <td>{data.numOfBathrooms}</td>\n                      </tr>\n                      <tr>\n                        <td>Number Of Bedrooms</td>\n                        <td>{data.numOfBedrooms}</td>\n                      </tr>\n                      <tr>\n                        <td>Area(Square Feet)</td>\n                        <td>{data.squareFeet}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default withRouter(PropertyDetails);\n","C:\\Projects\\prop-investor\\src\\components\\sidebar\\sidebar.tsx",[],"C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\loginSignupForm.tsx",[],"C:\\Projects\\prop-investor\\src\\components\\propertyTile\\propertyTile.tsx",["329","330","331"],"import React from \"react\";\nimport _ from \"lodash\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./propertyTile.css\";\nimport { Col, Container, Row, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass PropertyTile extends React.PureComponent<\n  { config: any; key: string },\n  { houses: any }\n> {\n  render() {\n    const { config, key } = this.props;\n    return (\n      <Col key={key} xs={12} md={6} lg={3} className=\"d-inline-block\">\n        <Jumbotron className=\"p-3\">\n          <h3>{config.name}</h3>\n          <Image src={config?.images?.[0]} fluid className=\"fixed-height\" />\n          <p>{config.about}</p>\n          <p>\n            <Button variant=\"primary\">\n              <Link\n                to={`/property-details/${config.id}`}\n                className=\"redirect-button\"\n              >\n                Learn more\n              </Link>\n            </Button>\n          </p>\n        </Jumbotron>\n      </Col>\n    );\n  }\n}\n\nexport default PropertyTile;\n","C:\\Projects\\prop-investor\\src\\components\\registerNewProperty\\registerNewProperty.tsx",["332"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Button, Form, Modal, Col } from \"react-bootstrap\";\r\nimport FormFeedback from \"components/formGenerator/formFeedback\";\r\nimport validation from \"utils/formValidity/validation\";\r\nimport bsCustomFileInput from \"bs-custom-file-input\";\r\nimport * as countriesConstant from \"utils/constants/countries\";\r\nimport * as statesConstant from \"utils/constants/states\";\r\nimport * as validationConstants from \"utils/formValidity/constants\";\r\n\r\nclass RegisterNewPropertyForm extends React.PureComponent<\r\n  {\r\n    onClose: () => void;\r\n    onRegisterProperty: (obj: any) => void;\r\n    registerPropertyStatus: any;\r\n  },\r\n  { isFormSubmitted: boolean; isFormValid: boolean; form: any }\r\n> {\r\n  state = {\r\n    isFormSubmitted: false,\r\n    isFormValid: false,\r\n    form: {\r\n      name: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.name.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.name.rules[0].message,\r\n        ],\r\n      },\r\n      address_1: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.address.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.address.rules[0].message,\r\n        ],\r\n      },\r\n      address_2: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.address.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.address.rules[0].message,\r\n        ],\r\n      },\r\n      city: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.city.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.city.rules[0].message,\r\n        ],\r\n      },\r\n      state: {\r\n        valid: false,\r\n        value: \"\",\r\n        // rules: validationConstants.validation.state.rules,\r\n        // validationMessages: [\r\n        //   validationConstants.validation.state.rules[0].message,\r\n        // ],\r\n      },\r\n      landmark: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.landmark.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.landmark.rules[0].message,\r\n        ],\r\n      },\r\n      country: {\r\n        valid: true,\r\n        value: \"Afghanistan\",\r\n      },\r\n      zip: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.zip.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.zip.rules[0].message,\r\n        ],\r\n      },\r\n      mapLink: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.mapLink.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.mapLink.rules[0].message,\r\n        ],\r\n      },\r\n      numberOfBathrooms: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.rooms.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.rooms.rules[0].message,\r\n        ],\r\n      },\r\n      numberOfBedrooms: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.rooms.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.rooms.rules[0].message,\r\n        ],\r\n      },\r\n      squareFeet: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.area.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.area.rules[0].message,\r\n        ],\r\n      },\r\n      value: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.value.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.value.rules[0].message,\r\n        ],\r\n      },\r\n      fileImage: {\r\n        valid: false,\r\n        value: \"\",\r\n        rules: validationConstants.validation.images.rules,\r\n        validationMessages: [\r\n          validationConstants.validation.images.rules[0].message,\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const { isFormValid } = this.state;\r\n    const { onRegisterProperty } = this.props;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // onRegisterProperty(this.generateFormPostObj());\r\n    if (isFormValid) {\r\n      const postObj = this.generateFormPostObj();\r\n      onRegisterProperty(postObj);\r\n    }\r\n    this.setState({ isFormSubmitted: true });\r\n  };\r\n\r\n  generateFormPostObj = () => {\r\n    const formData: any = new FormData();\r\n    _.forOwn(this.state.form, (value, key) =>\r\n      formData.append(key, value.value)\r\n    );\r\n    formData.append(\"id\", 1321);\r\n    formData.append(\"about\", \"Test prop\");\r\n    for (var value of formData.values()) {\r\n      console.log(value);\r\n    }\r\n    return formData;\r\n  };\r\n\r\n  setFormValidity = () => {\r\n    const { form } = this.state;\r\n    this.setState({ isFormValid: validation.checkFormValidity(form) });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const files = event.target.files[0];\r\n\r\n    this.updateForm(\"fileImage\", files);\r\n  };\r\n\r\n  updateForm = (id, value) => {\r\n    const { form } = this.state;\r\n    const updatedForm = { ...form };\r\n    const updatedFormField = { ...updatedForm[id] };\r\n    updatedFormField.value = value;\r\n\r\n    const { valid, validationMessages } = validation.checkFieldValidity(\r\n      updatedFormField.rules,\r\n      value\r\n    );\r\n    updatedFormField.valid = valid;\r\n    updatedFormField.validationMessages =\r\n      validationMessages || updatedFormField?.rules[0]?.message;\r\n    updatedForm[id] = updatedFormField;\r\n    this.setState({ form: updatedForm }, () => this.setFormValidity());\r\n  };\r\n\r\n  handleTextBoxChange = (event) => {\r\n    const { value, id } = event.target;\r\n    this.updateForm(id, value);\r\n  };\r\n\r\n  handleCountryChange = (event) => {\r\n    const { id, value } = event.target;\r\n    this.updateForm(id, value);\r\n  };\r\n\r\n  render() {\r\n    const { isFormSubmitted, form } = this.state;\r\n    const { onClose } = this.props;\r\n    return (\r\n      <Modal show onHide={onClose}>\r\n        <Form noValidate onSubmit={this.handleSubmit}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Register New</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"name\" key=\"name\">\r\n              <Form.Label>\r\n                Enter Property Name<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Name\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"name\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"name\"].valid}\r\n                value={form[\"name\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"name\"].valid}\r\n                validationMessages={form[\"name\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"address_1\" key=\"address_1\">\r\n              <Form.Label>\r\n                Enter Address Line 1<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Address Line 1\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"address_1\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"address_1\"].valid}\r\n                value={form[\"address_1\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"address_1\"].valid}\r\n                validationMessages={form[\"address_1\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"address_2\" key=\"address_2\">\r\n              <Form.Label>\r\n                Enter Address Line 2<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Address Line 2\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"address_2\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"address_2\"].valid}\r\n                value={form[\"address_2\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"address_2\"].valid}\r\n                validationMessages={form[\"address_2\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"country\">\r\n              <Form.Label>\r\n                Select County<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"lg\"\r\n                onChange={this.handleCountryChange}\r\n              >\r\n                {_.map(countriesConstant.countriesList, (country) => (\r\n                  <option key={country.code}>{country.name}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"city\" key=\"city\">\r\n              <Form.Label>\r\n                Enter City Name<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter City Name\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"city\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"city\"].valid}\r\n                value={form[\"city\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"city\"].valid}\r\n                validationMessages={form[\"city\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"state\" key=\"state\">\r\n            <Form.Label>\r\n              Select State<span className=\"required\">*</span>\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              size=\"lg\"\r\n              onChange={this.handleCountryChange}\r\n            >\r\n              {_.map(\r\n                statesConstant.statesList[form[\"country\"].value],\r\n                (state) => (\r\n                  <option key={state.id}>{state.name}</option>\r\n                )\r\n              )}\r\n            </Form.Control>\r\n            {/* <FormFeedback\r\n              valid={form[\"state\"].valid}\r\n              validationMessages={form[\"state\"].validationMessages}\r\n            /> */}\r\n          </Form.Group>\r\n                <Form.Group controlId=\"zip\" key=\"zip\">\r\n                  <Form.Label>\r\n                    Enter Zip Code<span className=\"required\">*</span>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Zip Code\"\r\n                    size=\"lg\"\r\n                    onChange={this.handleTextBoxChange}\r\n                    isValid={form[\"zip\"].valid}\r\n                    isInvalid={isFormSubmitted && !form[\"zip\"].valid}\r\n                    value={form[\"zip\"].value}\r\n                  />\r\n                  <FormFeedback\r\n                    valid={form[\"zip\"].valid}\r\n                    validationMessages={form[\"zip\"].validationMessages}\r\n                  />\r\n                </Form.Group>\r\n            <Form.Group controlId=\"landmark\" key=\"landmark\">\r\n              <Form.Label>\r\n                Enter Landmark<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Landmark Name\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"landmark\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"landmark\"].valid}\r\n                value={form[\"landmark\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"landmark\"].valid}\r\n                validationMessages={form[\"landmark\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId=\"mapLink\" key=\"mapLink\">\r\n              <Form.Label>\r\n                Enter mapLink<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Map Link\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"mapLink\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"mapLink\"].valid}\r\n                value={form[\"mapLink\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"mapLink\"].valid}\r\n                validationMessages={form[\"mapLink\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"numberOfBathrooms\" key=\"numberOfBathrooms\">\r\n              <Form.Label>\r\n                Enter Number Of Bathrooms<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Number Of Bathrooms\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"numberOfBathrooms\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"numberOfBathrooms\"].valid}\r\n                value={form[\"numberOfBathrooms\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"numberOfBathrooms\"].valid}\r\n                validationMessages={\r\n                  form[\"numberOfBathrooms\"].validationMessages\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"numberOfBedrooms\" key=\"numberOfBedrooms\">\r\n              <Form.Label>\r\n                Enter Number Of Bedrooms<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Number Of Bedrooms\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"numberOfBedrooms\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"numberOfBedrooms\"].valid}\r\n                value={form[\"numberOfBedrooms\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"numberOfBedrooms\"].valid}\r\n                validationMessages={form[\"numberOfBedrooms\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"squareFeet\" key=\"squareFeet\">\r\n              <Form.Label>\r\n                Enter Area(square Feet)<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Area in Square Feet\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"squareFeet\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"squareFeet\"].valid}\r\n                value={form[\"squareFeet\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"squareFeet\"].valid}\r\n                validationMessages={form[\"squareFeet\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"value\" key=\"value\">\r\n              <Form.Label>\r\n                Enter value(USD)<span className=\"required\">*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Property value\"\r\n                size=\"lg\"\r\n                onChange={this.handleTextBoxChange}\r\n                isValid={form[\"value\"].valid}\r\n                isInvalid={isFormSubmitted && !form[\"value\"].valid}\r\n                value={form[\"value\"].value}\r\n              />\r\n              <FormFeedback\r\n                valid={form[\"value\"].valid}\r\n                validationMessages={form[\"value\"].validationMessages}\r\n              />\r\n            </Form.Group>\r\n            <Form.File\r\n              className=\"position-relative\"\r\n              required\r\n              name=\"file\"\r\n              label={`Property Image`}\r\n              onChange={this.handleChange}\r\n              isValid={form[\"fileImage\"].valid}\r\n              multiple\r\n              id=\"fileImage\"\r\n              feedbackTooltip\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"justify-content-center\">\r\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" block>\r\n              Register\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterNewPropertyForm;\r\n","C:\\Projects\\prop-investor\\src\\utils\\constants\\states.js",[],"C:\\Projects\\prop-investor\\src\\utils\\formValidity\\validation.js",["333"],"import _ from \"lodash\";\nimport * as constants from \"./constants\";\n\nconst validateEmail = (value) => constants.EMAIL_REGEX.test(value);\n\nconst validateRequired = (value) =>\n  !_.isNil(value) && constants.NON_EMPTY_REGEX.test(value);\n\nconst validateAlphabets = (value) => constants.ONLY_ALHABETS.test(value);\n\nconst validateZipCode = (value) => constants.ZIP_CODE.test(value);\n\nconst validateNumbers = (value) => constants.ONLY_NUMBERS.test(value);\n\nconst pushValidationMessage = (result, message, validationMessages) => {\n  if (!result) {\n    validationMessages.push(message);\n  }\n};\n\nconst validateRule = (rule, value, validationMessages) => {\n  let result = true;\n  switch (rule.id) {\n    case \"EMAIL\":\n      result = validateEmail(value);\n      pushValidationMessage(result, rule.message, validationMessages);\n      return result;\n    case \"REQUIRED\":\n      result = validateRequired(value);\n      pushValidationMessage(result, rule.message, validationMessages);\n      return result;\n    case \"ALPHABETS\":\n      result = validateAlphabets(value);\n      pushValidationMessage(result, rule.message, validationMessages);\n      return result;\n    case \"ZIP_CODE\":\n      result = validateZipCode(value);\n      pushValidationMessage(result, rule.message, validationMessages);\n      return result;\n    case \"NUMBERS\":\n      result = validateNumbers(value);\n      pushValidationMessage(result, rule.message, validationMessages);\n      return result;\n  }\n};\n\nconst validation = {\n  checkFieldValidity: (rules, value) => {\n    const validationMessages = [];\n    const isValid = _.reduce(\n      rules,\n      (valid, rule) => valid && validateRule(rule, value, validationMessages),\n      true\n    );\n    return { valid: isValid, validationMessages };\n  },\n  checkFormValidity: (form) => {\n    let isValid = true;\n    _.forOwn(form, (value, key) => {\n      isValid = isValid && form[key].valid;\n    });\n\n    return isValid;\n  },\n};\n\nexport default validation;\n","C:\\Projects\\prop-investor\\src\\utils\\formValidity\\constants.js",[],"C:\\Projects\\prop-investor\\src\\utils\\constants\\countries.js",[],"C:\\Projects\\prop-investor\\src\\components\\formGenerator\\formFeedback.tsx",[],"C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\signUpForm.tsx",[],"C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\loginForm.tsx",[],"C:\\Projects\\prop-investor\\src\\components\\loginSignupForm\\constants.js",[],{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":24,"column":1,"nodeType":"340","endLine":24,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":24,"column":1,"nodeType":"340","endLine":24,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":42,"column":1,"nodeType":"340","endLine":42,"endColumn":51},{"ruleId":"338","severity":1,"message":"341","line":86,"column":1,"nodeType":"340","endLine":86,"endColumn":61},{"ruleId":"338","severity":1,"message":"339","line":25,"column":1,"nodeType":"340","endLine":25,"endColumn":31},{"ruleId":"338","severity":1,"message":"341","line":52,"column":1,"nodeType":"340","endLine":52,"endColumn":65},{"ruleId":"338","severity":1,"message":"341","line":62,"column":1,"nodeType":"340","endLine":62,"endColumn":67},{"ruleId":"338","severity":1,"message":"341","line":49,"column":1,"nodeType":"340","endLine":49,"endColumn":55},{"ruleId":"338","severity":1,"message":"339","line":96,"column":1,"nodeType":"340","endLine":96,"endColumn":73},{"ruleId":"338","severity":1,"message":"341","line":213,"column":1,"nodeType":"340","endLine":213,"endColumn":62},{"ruleId":"342","severity":1,"message":"343","line":32,"column":34,"nodeType":"344","endLine":32,"endColumn":36,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":13},{"ruleId":"346","severity":1,"message":"350","line":16,"column":24,"nodeType":"348","messageId":"349","endLine":16,"endColumn":30},{"ruleId":"346","severity":1,"message":"350","line":21,"column":24,"nodeType":"348","messageId":"349","endLine":21,"endColumn":30},{"ruleId":"351","severity":1,"message":"352","line":148,"column":31,"nodeType":"353","messageId":"354","endLine":148,"endColumn":33},{"ruleId":"346","severity":1,"message":"350","line":38,"column":26,"nodeType":"348","messageId":"349","endLine":38,"endColumn":32},{"ruleId":"351","severity":1,"message":"355","line":56,"column":27,"nodeType":"353","messageId":"354","endLine":56,"endColumn":29},{"ruleId":"351","severity":1,"message":"352","line":67,"column":29,"nodeType":"353","messageId":"354","endLine":67,"endColumn":31},{"ruleId":"356","severity":1,"message":"357","line":85,"column":15,"nodeType":"358","endLine":89,"endColumn":16},{"ruleId":"346","severity":1,"message":"359","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":9},{"ruleId":"346","severity":1,"message":"360","line":6,"column":15,"nodeType":"348","messageId":"349","endLine":6,"endColumn":24},{"ruleId":"346","severity":1,"message":"361","line":6,"column":26,"nodeType":"348","messageId":"349","endLine":6,"endColumn":29},{"ruleId":"346","severity":1,"message":"362","line":3,"column":31,"nodeType":"348","messageId":"349","endLine":3,"endColumn":34},{"ruleId":"363","severity":1,"message":"364","line":23,"column":3,"nodeType":"365","messageId":"366","endLine":44,"endColumn":4},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onFetchUser'. Either include it or remove the dependency array.","ArrayExpression",["369"],"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'_' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},"Update the dependencies array to be: [onFetchUser]",{"range":"372","text":"373"},[781,783],"[onFetchUser]"]